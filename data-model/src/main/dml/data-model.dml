package pt.ist.data;

enum pt.ist.data.SynchronizationPolicy as SynchronizationPolicy;

valueType pt.ist.data.DataObjectType as DataObjectType {
    externalizeWith {
        String toString();
    }
}

class DataObject{
	String label (REQUIRED);
}

class DataObjectVersion {
    DataObjectType type;
    String externalizedValue;
}

class DataObjectAttribute {
	String label (REQUIRED);
	DataObjectType type;
    String externalizedValue;
}

class Relation;

class SynchronizationConfiguration {
    SynchronizationPolicy sourcePolicy;
    SynchronizationPolicy targetPolicy;
}

relation DataObjectHasVersions {
    DataObject playsRole dataObject { multiplicity 1..1; }
    DataObjectVersion playsRole version { multiplicity 0..*; }
}

relation DataObjectHasLastVersion {
    DataObject playsRole { multiplicity 0..1; }
    DataObjectVersion playsRole lastVersion { multiplicity 1..1; }
}

relation DataObjectVersionMayHavePreviousAndNextVersions {
    DataObjectVersion playsRole previousVersion { multiplicity 0..1; }
    DataObjectVersion playsRole nextVersion { multiplicity 0..1; }
}

relation DataObjectVersionHasAuthor {
    DataObjectVersion playsRole authoredDataObjectVersion { multiplicity 0..*; }
    .pt.ist.authentication.User playsRole author { multiplicity 1..1; }
}

relation DataObjectVersionHasDataObjectAttribute {
	DataObjectVersion playsRole dataObjectVersion { multiplicity 1..1; }
	DataObjectAttribute playsRole attribute { multiplicity 0..*;}
}

relation SynchronizationConfigurationHasSourceDataObject {
    DataObject playsRole sourceDataObject { multiplicity 1..1; }
    SynchronizationConfiguration playsRole sourceSynchronizationConfiguration { multiplicity 0..*; }
}

relation SynchronizationConfigurationHasTargetDataObject {
    DataObject playsRole targetDataObject { multiplicity 1..1; }
    SynchronizationConfiguration playsRole targetSynchronizationConfiguration { multiplicity 0..*; }
}

relation DataObjectVersionMayBeCreatedByMerge {
    DataObjectVersion playsRole targetMergedVersion { multiplicity 0..*; }
    DataObjectVersion playsRole sourceMergeVersion { multiplicity 0..1; }
}

relation SynchronizationConfigurationHasAuthor {
    SynchronizationConfiguration playsRole synchronizationConfiguration { multiplicity 0..*; }
    .pt.ist.authentication.User playsRole author { multiplicity 1..1; }
}

relation DataObjectHasEffectivePeriod {
    DataObject playsRole { multiplicity 0..1; }
    .pt.ist.util.time.EffectivePeriod playsRole effectivePeriod { multiplicity 1..1; }
}

relation DataObjectVersionHasEffectivePeriod {
    DataObjectVersion playsRole { multiplicity 0..1; }
    .pt.ist.util.time.EffectivePeriod playsRole effectivePeriod { multiplicity 1..1; }
}

relation RelationsHasSourceDataObject {
	DataObject playsRole sourceDataObejct { multiplicity 0..1; }
	Relation playsRole sourceRelation { multiplicity 0..*; }
}

relation RelationHasTargetDataObject {
	DataObject playsRole targetDataObject { multiplicity 0..*; }
	Relation playsRole targetRelation { multiplicity 0..*; }
}

relation RelationHasEffectivePeriod {
	Relation playsRole { multiplicity 0..1; }
    .pt.ist.util.time.EffectivePeriod playsRole effectivePeriod { multiplicity 1..1; }
}